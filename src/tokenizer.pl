%% Author: James Walker
%% Copyrighted 2017 under the MIT license:
%%   http://www.opensource.org/licenses/mit-license.php
%%
%% Purpose: Tokenizes whitespace delimited ASCII strings from a file
%% E.g.,    tokenize_file('input.txt', Token_List).

% tokenize_file/2
% tokenize_file(+FileName, -Token_List)
% Takes in a filename, returns the file contents as a list of tokens
tokenize_file(FileName, Token_List) :-
  open(FileName, read, Stream),
  read_tokens_from_stream(Stream, Tokens_From_Stream),
  close(Stream),
  clean_token_list(Tokens_From_Stream, Token_List).

% read_tokens_from_stream/2
% read_tokens_from_stream(+Stream, -Tokens_From_Stream)
% Tokens are read from a stream and added to a list
read_tokens_from_stream(Stream, [Token|Tokens_From_Stream]) :-
  \+ at_end_of_stream(Stream),
  get_next_token(Stream, Token),
  !,
  read_tokens_from_stream(Stream, Tokens_From_Stream).
read_tokens_from_stream(_, []).

% get_next_token/2
% get_next_token(+Stream, -Token).
% Reads characters from stream and unifies as a single token
get_next_token(Stream, Token) :-
  get0(Stream, Ascii_Char),
  get_next_char(Stream, String, Ascii_Char),
  atom_codes(Token, String).

% get_next_char/3
% get_next_char(+Stream, -String, +Ascii_Char).
% Retrieves the next character from the stream unless it has an ASCII code 
% below 32 (i.e., whitespace or control character)
get_next_char(Stream, [Ascii_Char|String], Ascii_Char) :-
  Ascii_Char > 32,
  get0(Stream, Next_Ascii_Char),
  !,
  get_next_char(Stream, String, Next_Ascii_Char).
get_next_char(_, [], _).

% clean_token_list/2
% clean_token_list(+Tokens_From_Stream, -Token_List).
% Removes empty tokens generated by consecutive whitespace delimiters
clean_token_list([], []) :-
  !.
clean_token_list([''|Tokens_From_Stream], Token_List) :-
  !,
  clean_token_list(Tokens_From_Stream, Token_List).
clean_token_list([Token|Tokens_From_Stream], [Token|Token_List]) :-
  clean_token_list(Tokens_From_Stream, Token_List).
